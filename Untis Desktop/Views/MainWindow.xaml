<Window x:Class="UntisDesktop.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModels="clr-namespace:UntisDesktop.ViewModels"
        xmlns:Localization="clr-namespace:UntisDesktop.Localization"
        mc:Ignorable="d"
        Title="Untis Desktop"
        MinHeight="0" MinWidth="0" Height="600" Width="1000">
    <Window.DataContext>
        <ViewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <!-- Error box -->
        <Border x:Name="ErrorBox" Panel.ZIndex="1" Background="#FFFB4D4D" BorderBrush="Red" BorderThickness="1" CornerRadius="10" HorizontalAlignment="Center"
                Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Padding="20,10,20,10" Margin="0,15,0,0">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding ErrorBoxContent, Mode=OneWay}" VerticalAlignment="Center"/>
                <Button Click="ErrorBoxClose_Click" VerticalAlignment="Center">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Label Name="Btn" Content="❌" Foreground="Black"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Btn" Property="Background" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <Border.RenderTransform>
                <TranslateTransform x:Name="ErrorBoxTranslation" Y="-75"/>
            </Border.RenderTransform>
            <Border.Resources>
                <Storyboard x:Key="PopUpAnimation">
                    <DoubleAnimation Storyboard.TargetName="ErrorBoxTranslation" Storyboard.TargetProperty="Y" From="-75" To="10" Duration="0:0:1">
                        <DoubleAnimation.EasingFunction>
                            <QuadraticEase EasingMode="EaseInOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </Border.Resources>
        </Border>

        <!-- Menu bar -->
        <Grid Grid.Column="0" Margin="10,0,0,15">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Vertical" Grid.Row="0" VerticalAlignment="Center">
                <!-- Today -->
                <Button Name="TodayBtn" ToolTip="{Localization:Localize MainWindow.Menu.Today}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="TodayBtn">
                    <Grid>
                        <Image Source="/Assets/today.png" Height="50" Panel.ZIndex="0"/>
                        <Border Background="{Binding ElementName=TodayBtn, Path=Background, Mode=OneWay}" Visibility="{Binding IsUnreadNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" CornerRadius="50"
                                Height="16" Width="16" Margin="0,-32,-26,0" Padding="2.5" Panel.ZIndex="1">
                            <Ellipse Fill="Red"/>
                        </Border>
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=TodayItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Timetable -->
                <Button Name="TimetableBtn" ToolTip="{Localization:Localize MainWindow.Menu.Timetable}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="TimetableBtn">
                    <Image Source="/Assets/calendar_month.png" Height="50"/>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=TimetableItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Messages -->
                <Button Name="MailBtn" ToolTip="{Localization:Localize MainWindow.Menu.Mail}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="MailBtn">
                    <Image Source="/Assets/mail.png" Height="50"/>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=MailItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="1" VerticalAlignment="Bottom">
                <!-- Settings -->
                <Button Name="SettingsBtn" ToolTip="{Localization:Localize MainWindow.Menu.Settings}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="SettingsBtn">
                    <Image Source="/Assets/settings.png" Height="50"/>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SettingsItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                
                <!-- Profiles -->
                <Button Name="ProfileBtn" ToolTip="{Localization:Localize MainWindow.Menu.Profile}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="ProfileBtn">
                    <Image Source="/Assets/person.png" Height="50"/>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ProfileItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>

        <TabControl Grid.Column="1" BorderThickness="0">
            <TabControl.ItemContainerStyle>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </TabControl.ItemContainerStyle>
            <TabItem x:Name="TodayItem" IsSelected="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding CurrentDate, Mode=OneWay, StringFormat=\{0:D\}, ConverterCulture={x:Static Localization:LangHelper.Culture}}" FontSize="16" Margin="15"
                               Grid.Row="0" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CurrentProfile.School.DisplayName}" FontSize="26" Margin="5" Grid.Row="1" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CurrentProfile.School.Address}" FontSize="10" Grid.Row="2" HorizontalAlignment="Center"/>

                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="3" Margin="0,30,0,0" Padding="10,0,10,0"
                                  PreviewMouseWheel="ListViewScrollViewer_PreviewMouseWheel">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <!-- No news -->
                            <Grid Grid.Row="0" Visibility="{Binding IsAnyNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=Inv, Mode=OneWay}"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Source="/Assets/notifications_off.png" Stretch="None" Grid.Row="0"/>
                                <TextBlock Text="{Localization:Localize MainWindow.Today.NNFC}" Grid.Row="1" HorizontalAlignment="Center"/>
                            </Grid>
                            
                            <!-- System news -->
                            <Grid Grid.Row="0" HorizontalAlignment="Center" Visibility="{Binding IsSysNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" Margin="0,0,0,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Content="{Localization:Localize MainWindow.Today.SysNFC}" FontSize="16" HorizontalAlignment="Center"/>
                                <ContentControl Content="{Binding TodayNews.SystemMessage}" ContentTemplate="{StaticResource ResourceKey=NewsMessageDataTemplate}" Grid.Row="1"/>
                            </Grid>

                            <!-- News -->
                            <Grid Visibility="{Binding IsNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" Grid.Row="1" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Content="{Localization:Localize MainWindow.Today.NFC}" FontSize="16" Grid.Row="0" HorizontalAlignment="Center"/>
                                <ListView ItemsSource="{Binding TodayNews.Messages}" ItemTemplate="{StaticResource NewsMessageDataTemplate}"
                                          BorderThickness="0" HorizontalContentAlignment="Center" Grid.Row="1" Padding="0">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Grid>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem x:Name="TimetableItem" IsSelected="False">
                <TextBlock Text="Timetable"/>
            </TabItem>
            <TabItem x:Name="MailItem" IsSelected="False">
                <TextBlock Text="Mail"/>
            </TabItem>
            <TabItem x:Name="SettingsItem" IsSelected="False">
                <TextBlock Text="Settings"/>
            </TabItem>
            <TabItem x:Name="ProfileItem" IsSelected="False">
                <TextBlock Text="Profiles"/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
