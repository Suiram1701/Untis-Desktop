<Window x:Class="UntisDesktop.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModels="clr-namespace:UntisDesktop.ViewModels"
        xmlns:Localization="clr-namespace:UntisDesktop.Localization"
        mc:Ignorable="d"
        Title="Untis Desktop"
        MinHeight="0" MinWidth="0" Height="600" Width="1000">
    <Window.DataContext>
        <ViewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- Error box -->
        <Border x:Name="ErrorBox" Panel.ZIndex="1" Background="#FFFB4D4D" BorderBrush="Red" BorderThickness="1" CornerRadius="10"
                Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="20,10,20,10" Margin="0,-90,0,0">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding ErrorBoxContent, Mode=OneWay}" VerticalAlignment="Center"/>
                <Button Template="{StaticResource ErrBoxBtn}" Click="ErrorBoxClose_Click" VerticalAlignment="Center"/>
            </StackPanel>
            <Border.RenderTransform>
                <TranslateTransform x:Name="ErrorBoxTranslation" Y="15"/>
            </Border.RenderTransform>
            <Border.Resources>
                <Storyboard x:Key="PopUpAnimation">
                    <DoubleAnimation Storyboard.TargetName="ErrorBoxTranslation" Storyboard.TargetProperty="Y" From="15" To="95" Duration="0:0:1">
                        <DoubleAnimation.EasingFunction>
                            <QuadraticEase EasingMode="EaseInOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </Border.Resources>
        </Border>

        <!-- Offline bar -->
        <Border Background="DarkGray" Visibility="{Binding IsOffline, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}"
                CornerRadius="10" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10" Padding="20,5,20,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                    <Image Source="/Assets/wifi_off.png" Height="22"/>
                    <TextBlock Text="{Localization:Localize MainWindow.Inf.NNC}" FontSize="14" Margin="10,0,0,0" VerticalAlignment="Center"/>
                </StackPanel>
                <Button Command="{Binding ReloadOfflineCommand, Mode=OneTime}" Grid.Column="2">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" CornerRadius="8" Padding="3,0,3,0">
                                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right">
                                    <TextBlock Text="{Localization:Localize MainWindow.G.Reload}" FontSize="14" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                    <Image Source="/Assets/refresh.png" Height="22">
                                        <Image.RenderTransform>
                                            <RotateTransform x:Name="Rotation" CenterX="11" CenterY="11" Angle="0"/>
                                        </Image.RenderTransform>
                                    </Image>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="RotateAnimation">
                                    <DoubleAnimation Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#8b8b8b"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#7d7d7d"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource RotateAnimation}"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Border>

        <!-- Menu bar -->
        <Grid Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Margin="10,0,0,15">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <StackPanel Orientation="Vertical" Grid.Row="0" VerticalAlignment="Center">
                
                <!-- Today -->
                <Button Name="TodayBtn" ToolTip="{Localization:Localize MainWindow.Menu.Today}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="TodayBtn">
                    <Grid>
                        <Image Source="/Assets/today.png" Height="50" Panel.ZIndex="0"/>
                        <Border CornerRadius="50" Background="{Binding ElementName=TodayBtn, Path=Background, Mode=OneWay}" Visibility="{Binding IsUnreadNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}"
                                Height="16" Width="16" Margin="0,-29,-26,0" Padding="2.5" Panel.ZIndex="1">
                            <Ellipse Fill="Red"/>
                        </Border>
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=TodayItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Timetable -->
                <Button Name="TimetableBtn" ToolTip="{Localization:Localize MainWindow.Menu.Timetable}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="TimetableBtn">
                    <Image Source="/Assets/calendar_month.png" Height="50"/>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=TimetableItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Messages -->
                <Button Name="MailBtn" ToolTip="{Localization:Localize MainWindow.Menu.Mail}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="MailBtn">
                    <Grid>
                        <Image Source="/Assets/mail.png" Height="50" Panel.ZIndex="0"/>
                        <Border Background="{Binding ElementName=MailBtn, Path=Background, Mode=OneWay}" Visibility="{Binding IsUnreadMessageAvailable, Converter={StaticResource BoolVisibilityConverter}}" CornerRadius="50"
                                Height="16" Width="16" Margin="0,-25,-28,0" Padding="2.5" Panel.ZIndex="1">
                            <Ellipse Fill="Red"/>
                        </Border>
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=MailItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="1" VerticalAlignment="Bottom">
                
                <!-- Settings -->
                <Button Name="SettingsBtn" ToolTip="{Localization:Localize MainWindow.Menu.Settings}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="SettingsBtn">
                    <Image Source="/Assets/settings.png" Height="50"/>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SettingsItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Profiles -->
                <Button Name="ProfileBtn" ToolTip="{Localization:Localize MainWindow.Menu.Profile}" Template="{StaticResource MenuBtn}" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                        Click="MenuBtn_Click" Command="{Binding ReloadTabCommand, Mode=OneTime}" CommandParameter="ProfileBtn">
                    <Border CornerRadius="50" BorderBrush="Black" BorderThickness="2.5" Margin="-2.5" Padding="4.5">
                        <Image Source="{Binding ProfileImage, Mode=OneWay}" Height="50"/>
                    </Border>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ProfileItem, Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>

        <TabControl Grid.Row="1" Grid.Column="1" Style="{StaticResource HeaderLessTabControl}">
            <TabItem x:Name="TodayItem" IsSelected="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding CurrentDate, Mode=OneWay, StringFormat=\{0:D\}, ConverterCulture={x:Static Localization:LangHelper.Culture}}" FontSize="16" Margin="15"
                               Grid.Row="0" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CurrentProfile.School.DisplayName}" FontSize="26" Margin="5" Grid.Row="1" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CurrentProfile.School.Address}" FontSize="10" Grid.Row="2" HorizontalAlignment="Center"/>

                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="3" Margin="0,30,0,0" Padding="10,0,10,0"
                                  PreviewMouseWheel="ListViewScrollViewer_PreviewMouseWheel">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <!-- No news -->
                            <Grid Grid.Row="0" Visibility="{Binding IsAnyNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=Inv, Mode=OneWay}"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Source="/Assets/notifications_off.png" Stretch="None" Grid.Row="0"/>
                                <TextBlock Text="{Localization:Localize MainWindow.Today.NNFC}" Grid.Row="1" HorizontalAlignment="Center"/>
                            </Grid>

                            <!-- System news -->
                            <Grid Grid.Row="0" HorizontalAlignment="Center" Visibility="{Binding IsSysNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" Margin="0,0,0,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Content="{Localization:Localize MainWindow.Today.SysNFC}" FontSize="16" HorizontalAlignment="Center"/>
                                <ContentControl Content="{Binding TodayNews.SystemMessage}" ContentTemplate="{StaticResource ResourceKey=NewsMessageDataTemplate}" Grid.Row="1"/>
                            </Grid>

                            <!-- News -->
                            <Grid Visibility="{Binding IsNewsAvailable, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" Grid.Row="1" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Content="{Localization:Localize MainWindow.Today.NFC}" FontSize="16" Grid.Row="0" HorizontalAlignment="Center"/>
                                <ListView ItemsSource="{Binding TodayNews.Messages}" ItemTemplate="{StaticResource NewsMessageDataTemplate}"
                                          BorderThickness="0" HorizontalContentAlignment="Center" Grid.Row="1" Padding="0">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Grid>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem x:Name="TimetableItem" IsSelected="False">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Week selection -->
                    <StackPanel Orientation="Horizontal" Height="30" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left">

                        <Button Template="{StaticResource MenuBtn}" Command="{Binding OtherWeekBtnCommand, Mode=OneTime}" CommandParameter="-7"
                                ToolTip="{Localization:Localize MainWindow.Timetable.PW}">
                            <Image Source="/Assets/arrow_back_ios.png"/>
                        </Button>
                        
                        <TextBlock Text="{Binding SelectedWeek, StringFormat=\{0:M\}, ConverterCulture={x:Static Localization:LangHelper.Culture}, Mode=OneWay}" FontSize="16"
                                   VerticalAlignment="Center" Margin="10,0,10,0"/>
                        <Line X1="0" X2="12" Stroke="Black" StrokeThickness="1.8" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding NextWeek, StringFormat=\{0:M\}, ConverterCulture={x:Static Localization:LangHelper.Culture}, Mode=OneWay}" FontSize="16"
                                   VerticalAlignment="Center" Margin="10,0,10,0"/>

                        <Button Template="{StaticResource MenuBtn}" Command="{Binding OtherWeekBtnCommand, Mode=OneTime}" CommandParameter="7"
                                ToolTip="{Localization:Localize MainWindow.Timetable.NW}">
                            <Image Source="/Assets/arrow_forward_ios.png"/>
                        </Button>

                        <!-- Current week -->
                        <Button Template="{StaticResource MenuBtn}" Command="{Binding CurrentWeekCommand, Mode=OneTime}" Margin="10,0">
                            <TextBlock Text="{Localization:Localize MainWindow.Timetable.CW}" FontSize="14"/>
                        </Button>

                        <!-- Loading view -->
                        <Image x:Name="TimetableLoadingProgressImg" Source="/Assets/progress_activity.png" Visibility="{Binding IsTimetableLoading, Converter={StaticResource BoolVisibilityConverter}}">
                            <Image.RenderTransform>
                                <RotateTransform x:Name="Rotation" Angle="0"
                                                 CenterY="{Binding ElementName=TimetableLoadingProgressImg, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=/2}"
                                                 CenterX="{Binding ElementName=TimetableLoadingProgressImg, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=/2}"/>
                            </Image.RenderTransform>
                            <Image.Resources>
                                <Storyboard x:Key="TimetableLoadingAnimation">
                                    <DoubleAnimation Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" RepeatBehavior="Forever">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </Image.Resources>
                        </Image>

                        <!-- Reloading btn -->
                        <Button Visibility="{Binding ViewTimetableReloadBtn, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}"
                                ToolTip="{Localization:Localize MainWindow.G.Reload}" Command="{Binding OtherWeekBtnCommand, Mode=OneTime}" CommandParameter="0" Template="{StaticResource MenuBtn}">
                            <Image Source="/Assets/refresh.png" Margin="-2"/>
                        </Button>
                    </StackPanel>
                    
                    <TextBlock Text="{Binding CurrentSchoolYearString, Mode=OneWay}" FontSize="20" Grid.Row="0" HorizontalAlignment="Right" Margin="30,10"/>
                    
                    <Grid x:Name="Timegrid" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="MailItem" IsSelected="False">
                <Grid Margin="0,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Mail menu bar -->
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        
                        <!-- Inbox -->
                        <Button x:Name="InboxBtn" HorizontalAlignment="Left" Margin="10,0" Template="{StaticResource MenuBtn}"
                                Click="MailMenuBtn_Click">
                            <StackPanel Orientation="Horizontal" Margin="10,0">
                                <Image Source="/Assets/mail.png" Height="18"/>
                                <TextBlock Text="{Localization:Localize MainWindow.Mail.Inbox}" FontSize="13" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=InboxItem, Path=IsSelected, Mode=OneWay}" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!-- Sent mails -->
                        <Button x:Name="SentBtn" Visibility="{Binding ShowSentTab, Converter={StaticResource BoolVisibilityConverter}, Mode=OneTime}" HorizontalAlignment="Left"
                                Margin="10,0" Template="{StaticResource MenuBtn}" Click="MailMenuBtn_Click">
                            <StackPanel Orientation="Horizontal" Margin="10,0">
                                <Image Source="/Assets/outgoing_mail.png" Height="18"/>
                                <TextBlock Text="{Localization:Localize MainWindow.Mail.Sent}" FontSize="13" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=SentItem, Path=IsSelected, Mode=OneWay}" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!-- Drafts -->
                        <Button x:Name="DraftsBtn" Visibility="{Binding ShowDraftsTab, Converter={StaticResource BoolVisibilityConverter}, Mode=OneTime}" HorizontalAlignment="Left"
                                Margin="10,0" Template="{StaticResource MenuBtn}" Click="MailMenuBtn_Click">
                            <StackPanel Orientation="Horizontal" Margin="10,0">
                                <Image Source="/Assets/drafts.png" Height="18"/>
                                <TextBlock Text="{Localization:Localize MainWindow.Mail.Drafts}" FontSize="13" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=DraftsItem, Path=IsSelected, Mode=OneWay}" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!-- Reloading animation -->
                        <Image x:Name="MailLoadingProgressImg" Source="/Assets/progress_activity.png" 
                               Visibility="{Binding IsMailsLoading, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" Height="30" Margin="15,0">
                            <Image.RenderTransform>
                                <RotateTransform x:Name="RotationAnimation" Angle="0"
                                                 CenterY="{Binding ElementName=MailLoadingProgressImg, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=/2}"
                                                 CenterX="{Binding ElementName=MailLoadingProgressImg, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=/2}"/>
                            </Image.RenderTransform>
                            <Image.Resources>
                                <Storyboard x:Key="MailsLoadingAnimation">
                                    <DoubleAnimation Storyboard.TargetName="RotationAnimation" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" RepeatBehavior="Forever">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </Image.Resources>
                        </Image>

                        <!-- Reloading btn -->
                        <Button Visibility="{Binding ViewMailsReloadBtn, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}" ToolTip="{Localization:Localize MainWindow.G.Reload}"
                                Command="{Binding ReloadMailsCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=MailView, Path=SelectedIndex}"
                                Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" Margin="10,0" Template="{StaticResource MenuBtn}">
                            <Image Source="/Assets/refresh.png" Height="24" Margin="-2"/>
                        </Button>
                    </StackPanel>

                    <!-- New mail -->
                    <Button x:Name="NewMailBtn" Grid.Row="0" HorizontalAlignment="Right" Margin="10,0" Template="{StaticResource Btn}" Command="{Binding NewMailCommand, Mode=OneTime}">
                        <StackPanel Orientation="Horizontal" Margin="10,0">
                            <TextBlock Text="{Localization:Localize MainWindow.Mail.NMail}" FontSize="13" VerticalAlignment="Center" Margin="0,0,10,0"/>
                            <Image Source="/Assets/send.png" Height="18"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- View -->
                    <TabControl Name="MailView" Grid.Row="1" Style="{StaticResource HeaderLessTabControl}">
                        <TabItem x:Name="InboxItem" IsSelected="True">
                            <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                                <StackPanel Orientation="Vertical">
                                    <Grid Margin="0,0,0,30" Visibility="{Binding IsConfirmationMessagesAvailable, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="{Localization:Localize MainWindow.Mail.Inbox.RRC}" FontSize="24" Grid.Row="0"/>
                                        <Grid x:Name="ConfirmationMailInbox" Grid.Row="1"/>
                                    </Grid>
                                    <Grid x:Name="MailInbox"/>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem x:Name="SentItem" IsSelected="False">
                            <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                                <Grid x:Name="SentMails"/>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem x:Name="DraftsItem" IsSelected="False">
                            <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                                <Grid x:Name="DraftMails"/>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem x:Name="SettingsItem" IsSelected="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Notifications -->
                    <Button Name="NotificationOptBtn" Click="OptionsMenuBtn_Click" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Template="{StaticResource MenuBtn}">
                        <TextBlock Text="{Localization:Localize MainWindow.Opt.Notify}" FontSize="16" Margin="6,1"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=NotificationOptItem, Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!-- Third-Party -->
                    <Button Name="ThirdPartyBtn" Click="OptionsMenuBtn_Click" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top" Template="{StaticResource MenuBtn}">
                        <TextBlock Text="{Localization:Localize MainWindow.Opt.TPL}" FontSize="16" Margin="6,1"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ThirdPartyItem, Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TabControl Grid.RowSpan="4" Grid.Column="1" Style="{StaticResource HeaderLessTabControl}">
                        <TabItem x:Name="NotificationOptItem" IsSelected="False">
                            <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                                <Grid Margin="20">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Localization:Localize MainWindow.Opt.Notify.NM}" FontSize="16" Grid.Row="0" Grid.Column="0"
                                               VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                    <TextBlock Text="{Localization:Localize MainWindow.Opt.Notify.UrM}" FontSize="16" Grid.Row="1" Grid.Column="0"
                                               VerticalAlignment="Center" HorizontalAlignment="Right"/>

                                    <ToggleButton Name="NotifyNews" Click="NotifyOptBtn_ClickAsync" IsChecked="{Binding CurrentProfile.Options.NotifyOnNews, Mode=OneTime}"
                                                  Grid.Row="0" Grid.Column="1" Margin="10,5" Template="{StaticResource ON_OFF_ToggleBtn}"/>
                                    <ToggleButton Name="NotifyMail" Click="NotifyOptBtn_ClickAsync" IsChecked="{Binding CurrentProfile.Options.NotifyOnMessages, Mode=OneTime}"
                                                  Grid.Row="1" Grid.Column="1" Margin="10,5" Template="{StaticResource ON_OFF_ToggleBtn}"/>
                                </Grid>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem x:Name="ThirdPartyItem" IsSelected="False">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <StackPanel x:Name="ThirdParty" Orientation="Vertical"/>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem x:Name="ProfileItem" IsSelected="False">
                <Grid Name="ProfileGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Profile btn -->
                    <Button Click="ManageProfilesBtn_ClickAsync" Grid.Row="0" Grid.Column="0" Template="{StaticResource Btn}">
                        <StackPanel Orientation="Horizontal" Margin="-15,-10">
                            <Image Source="/Assets/person.png" Height="21" Margin="10,0"/>
                            <TextBlock Text="{Localization:Localize MainWindow.Profile.M}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0"/>
                        </StackPanel>
                    </Button>

                    <!-- Generally btn -->
                    <Button Name="GenerallyBtn" Click="ProfileMenuBtn_Click" Grid.Row="0" Grid.Column="1" Template="{StaticResource MenuBtn}">
                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=GenerallyItem, Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!-- Contact details btn -->
                    <Button Name="ContactDetailsBtn" Click="ProfileMenuBtn_Click" Visibility="{Binding CurrentProfile.AccountConfig.CanReadContactDetails, Converter={StaticResource BoolVisibilityConverter}, Mode=OneTime}"
                            Grid.Row="0" Grid.Column="2" Template="{StaticResource MenuBtn}">
                        <TextBlock Text="{Localization:Localize MainWindow.Profile.CD}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ContactDetailsItem, Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TabControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource HeaderLessTabControl}">
                        <TabItem x:Name="GenerallyItem" IsSelected="True">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Vertical">
                                    
                                    <!-- User name -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.UN}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding UserName, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Email -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.EM}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding G_Email, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Language -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.Lang}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding Language, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Usergroup -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.UG}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding UserGroup, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Department -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.D}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding Department, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Open bookings -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.OB}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding OpenBookings, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Max. open bookings -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.MOB}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding MaxOBookings, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Notify on email for messages -->
                                    <Grid Margin="10,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox IsChecked="{Binding NotifyMessageEmail, Mode=OneWay}" IsHitTestVisible="False" Grid.Column="0" VerticalAlignment="Center" Margin="5"/>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.NME}" FontSize="16" FontWeight="Medium" Grid.Column="1"/>
                                    </Grid>

                                    <!-- Get notify from ticket system -->
                                    <Grid Margin="10,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox IsChecked="{Binding NotifyTicketSystem, Mode=OneWay}" IsHitTestVisible="False" Grid.Column="0" VerticalAlignment="Center" Margin="5"/>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.NTS}" FontSize="16" FontWeight="Medium" Grid.Column="1"/>
                                    </Grid>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem x:Name="ContactDetailsItem" IsSelected="False">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Vertical">

                                    <!-- Email adresse -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.CD.EM}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding CD_Email, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Phone number -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.CD.PN}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding PhoneNumber, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Mobile phone number -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.CD.MPN}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding MobilePhoneNumber, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Street -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.CD.S}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding Street, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- Zip code -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.G.D}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding ZipCode, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>

                                    <!-- City -->
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Localization:Localize MainWindow.Profile.CD.C}" Style="{StaticResource ProfileItemLabel}"/>
                                        <TextBox Text="{Binding City, Mode=OneWay}" Style="{StaticResource ProfileItem}"/>
                                    </Grid>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
