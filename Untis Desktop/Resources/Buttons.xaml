<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Localization="clr-namespace:UntisDesktop.Localization"
                    xmlns:Converter="clr-namespace:UntisDesktop.Converter">
    <ControlTemplate x:Key="Btn" TargetType="{x:Type Button}">
        <Border Name="Border" CornerRadius="8" Background="{DynamicResource PressedBtnColor}" Padding="45,10">
            <ContentPresenter/>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBtnColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBtnColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressedBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DarkBtn" TargetType="{x:Type Button}">
        <Border Name="Border" CornerRadius="8" Background="{DynamicResource PressedDarkBtnColor}" Padding="45,10">
            <ContentPresenter/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBtnColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverDarkBtnColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuBtn" TargetType="{x:Type Button}">
        <Border Name="Border" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="5" Padding="5">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverDarkBtnColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ErrBoxBtn" TargetType="{x:Type Button}">
        <Label Name="Btn" Content="❌" Foreground="Black"/>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Btn" Property="Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Btn" Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RoundMenuBtn" TargetType="{x:Type Button}">
        <Border Name="Border" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="50" Padding="2">
            <ContentPresenter/>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverDarkBtnColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ToggleBtn" TargetType="{x:Type ToggleButton}">
        <Border Name="Border" CornerRadius="15" BorderBrush="{DynamicResource PressedDarkBtnColor}" BorderThickness="1" Padding="15,5">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckBtn" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Converter:BoolVisibilityConverter x:Key="BoolVisibility"/>
        </ControlTemplate.Resources>

        <Border CornerRadius="5" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Grid.Column="0"/>
                <Image Source="/Assets/check_circle.png" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BoolVisibility}, Mode=OneWay}"
                       Height="15" Grid.Column="1" HorizontalAlignment="Right" Margin="5,0,0,0"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverDarkBtnColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressedDarkBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ON_OFF_ToggleBtn" TargetType="{x:Type ToggleButton}">
        <Border Name="Border" CornerRadius="10" Background="{DynamicResource PressedBtnColor}" Padding="10,5">
            <Grid>
                <TextBlock Name="OFF" Text="{Localization:Localize ToggleBtn.OFF}" FontSize="16" Visibility="Hidden" HorizontalAlignment="Center"/>
                <TextBlock Name="ON" Text="{Localization:Localize ToggleBtn.ON}" FontSize="16" Visibility="Visible" HorizontalAlignment="Center"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBtnColor}"/>
                <Setter TargetName="ON" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="OFF" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DeleteBtn" TargetType="{x:Type Button}">
        <Border Name="Border" CornerRadius="5" Background="{DynamicResource PressedRedBtnColor}" Margin="0,0" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                Padding="3.5">
            <Image Source="/Assets/delete.png"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverRedBtnColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBtnColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>